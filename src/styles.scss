// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$StockMasterFrontend-primary: mat.define-palette(mat.$indigo-palette);
$StockMasterFrontend-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$StockMasterFrontend-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$StockMasterFrontend-theme: mat.define-light-theme((
  color: (
    primary: $StockMasterFrontend-primary,
    accent: $StockMasterFrontend-accent,
    warn: $StockMasterFrontend-warn,
  ),
  typography: mat.define-typography-config(),
  density: 0
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($StockMasterFrontend-theme);

@import "./app/utils/styles.scss";

html {
  font-family: Arial, Helvetica, sans-serif;
  font-size: medium;
}

body {
    margin: 0;
    padding: 0;
    color: white;
    background-color: $BG_DARK;
}

button {
  font-size: inherit;
  border: 0;
  cursor: pointer;
}

input {
  font-size: inherit;
  border: 0;
  outline: none;
}

a {
  cursor: pointer;
}

a:hover, a:focus {
  text-decoration: underline;
}
